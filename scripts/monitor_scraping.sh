#!/bin/bash
# Financial Scraping Progress Monitor

LOG_FILE=$(ls -t logs/financial_scraper_clean_start_*.log 2>/dev/null | head -1)

if [ -z "$LOG_FILE" ]; then
    echo "‚ùå Log dosyasƒ± bulunamadƒ±!"
    exit 1
fi

echo "==================================================================="
echo "üìä Fƒ∞NANSAL KAZIMA ƒ∞LERLEME RAPORU"
echo "==================================================================="
echo ""
echo "üìÑ Log Dosyasƒ±: $LOG_FILE"
echo ""

# Son i≈ülenen ≈üirket
echo "üè¢ Son ƒ∞≈ülenen:"
tail -100 "$LOG_FILE" | grep "\[.*Processing:" | tail -1
echo ""

# Ba≈üarƒ±/Hata sayƒ±larƒ±
SUCCESS_COUNT=$(grep "‚úì Success:" "$LOG_FILE" | wc -l | tr -d ' ')
FAILED_COUNT=$(grep "‚úó Failed:" "$LOG_FILE" | wc -l | tr -d ' ')
TOTAL=$((SUCCESS_COUNT + FAILED_COUNT))

echo "üìà ƒ∞statistikler:"
echo "  ‚úÖ Ba≈üarƒ±lƒ±: $SUCCESS_COUNT"
echo "  ‚ùå Ba≈üarƒ±sƒ±z: $FAILED_COUNT"
echo "  üìä Toplam: $TOTAL / 592"
if [ $TOTAL -gt 0 ]; then
    SUCCESS_RATE=$((SUCCESS_COUNT * 100 / TOTAL))
    echo "  üíØ Ba≈üarƒ± Oranƒ±: ${SUCCESS_RATE}%"
fi
echo ""

# Financial group daƒüƒ±lƒ±mƒ± (son 50 i≈ülemden)
echo "üìã Son ƒ∞≈ülenen Gruplar (son 50):"
tail -200 "$LOG_FILE" | grep "Financial Group:" | tail -50 | \
    awk -F'Financial Group: ' '{print $2}' | \
    awk -F' \\(' '{print $1}' | \
    sort | uniq -c | sort -rn
echo ""

# Hata varsa g√∂ster
if [ $FAILED_COUNT -gt 0 ]; then
    echo "‚ùå Ba≈üarƒ±sƒ±z ≈ûirketler:"
    grep "‚úó Failed:" "$LOG_FILE" | tail -10
    echo ""
fi

# DB kayƒ±t sayƒ±sƒ±
echo "üíæ Veritabanƒ± Durumu:"
psql postgresql://bist:12345@localhost:5432/bist_data -t -c "SELECT COUNT(*) FROM financial_statements;" 2>/dev/null | \
    awk '{print "  üì¶ Toplam Kayƒ±t: " $1}'

echo ""
echo "==================================================================="
echo "‚è±Ô∏è  $(date '+%Y-%m-%d %H:%M:%S')"
echo "==================================================================="
